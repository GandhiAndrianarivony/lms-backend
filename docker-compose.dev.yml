services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: dericsolen/lms:1.0
    container_name: lms_backend_api
    environment:
      JWT_SECRET: ${JWT_SECRET}
      JWT_ALGORITHM: ${JWT_ALGORITHM}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
    ports:
      - "0.0.0.0:9000:5768"
    volumes:
      - ./src:/apps/src
      - ./.env:/apps/.env:ro
      - ./migrations:/apps/migrations
      - ./alembic.ini:/apps/alembic.ini:rw
    depends_on:
      - relation_db
    develop:
      watch:
        - action: rebuild
          path: pyproject.toml
    
    stdin_open: true
    tty: true

  relation_db:
    image: postgres:16
    container_name: lms_relational_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - lms_relational_db_data:/var/lib/postgresql/data
    develop:
      watch:
        - action: restart
          path: .env
      
  nginx:
    image: nginx:stable-alpine3.20-perl
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/common_proxy.conf:/etc/nginx/common_proxy.conf:ro
      - ./nginx/common_ssl.conf:/etc/nginx/common_ssl.conf:ro
    depends_on:
      - api

volumes:
  lms_relational_db_data:
    external: false